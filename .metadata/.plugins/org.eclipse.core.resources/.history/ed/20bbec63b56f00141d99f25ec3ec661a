package com.compsci408.androidrx.patient;

import java.lang.reflect.Field;
import java.text.DateFormat;
import java.util.Calendar;

import android.app.Dialog;
import android.app.TimePickerDialog;
import android.content.Context;
import android.os.Bundle;
import android.widget.TimePicker;
import android.widget.Toast;

public class ConstrainedTimePicker extends TimePickerDialog {
	private int minHour = -1;
	private int minMinute = -1;

	private int maxHour = 25;
	private int maxMinute = 25;

	private int currentHour = 0;
	private int currentMinute = 0;

	private Calendar calendar = Calendar.getInstance();
	private DateFormat dateFormat;
	
	private int dayOfWeek;

	public ConstrainedTimePicker(Context context, OnTimeSetListener callBack, int hourOfDay, 
			int minute, boolean is24HourView, int dayOfWeek) {
	    super(context, callBack, hourOfDay, minute, is24HourView);
	    currentHour = hourOfDay;
	    currentMinute = minute;
	    dateFormat = DateFormat.getTimeInstance(DateFormat.SHORT);
	    this.dayOfWeek = dayOfWeek;

	    try {
	        Class<?> superclass = getClass().getSuperclass();
	        Field mTimePickerField = superclass.getDeclaredField("mTimePicker");
	        mTimePickerField.setAccessible(true);
	        TimePicker mTimePicker = (TimePicker) mTimePickerField.get(this);
	        mTimePicker.setOnTimeChangedListener(this);
	    } catch (NoSuchFieldException e) {
	    } catch (IllegalArgumentException e) {
	    } catch (IllegalAccessException e) {
	    }
	}
	
	@Override
	public Dialog onCreateDialog(Bundle savedInstanceState) {
		AlertDialog.Builder builder = new AlertDialog.Builder(getActivity());
	    // Get the layout inflater
	    LayoutInflater inflater = getActivity().getLayoutInflater();

	    // Inflate and set the layout for the dialog
	    // Pass null as the parent view because its going in the dialog layout
	    builder.setView(inflater.inflate(R.layout.dialog_signin, null))
		
	}

	public void setMin(int hour, int minute) {
	    minHour = hour;
	    minMinute = minute;
	}

	public void setMax(int hour, int minute) {
	    maxHour = hour;
	    maxMinute = minute;
	}
	
	public void setDayOfWeek(int day) {
		dayOfWeek = day;
	}

	@Override
	public void onTimeChanged(TimePicker view, int hourOfDay, int minute) {

	    boolean validTime = true;
	    if (hourOfDay < minHour || (hourOfDay == minHour && minute < minMinute)){
	    	Toast.makeText(getContext(), "Time cannot be earlier than this", Toast.LENGTH_SHORT).show();
	        validTime = false;
	    }

	    if (hourOfDay  > maxHour || (hourOfDay == maxHour && minute > maxMinute)){
	    	Toast.makeText(getContext(), "Time cannot be later than this", Toast.LENGTH_SHORT).show();
	        validTime = false;
	    }

	    if (validTime) {
	        currentHour = hourOfDay;
	        currentMinute = minute;
	    }

	    updateTime(currentHour, currentMinute);
	    updateDialogTitle(view, currentHour, currentMinute);
	}

	private void updateDialogTitle(TimePicker timePicker, int hourOfDay, int minute) {
	    calendar.set(Calendar.HOUR_OF_DAY, hourOfDay);
	    calendar.set(Calendar.MINUTE, minute);
	    String title = dateFormat.format(calendar.getTime());
	    setTitle(title);
	}
}
