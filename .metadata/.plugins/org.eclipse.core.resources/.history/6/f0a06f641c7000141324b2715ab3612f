package com.compsci408.androidrx.provider;

import java.util.ArrayList;
import java.util.HashSet;
import java.util.List;
import java.util.Set;

import com.compsci408.androidrx.LoginActivity;
import com.compsci408.androidrx.R;
import com.compsci408.rxcore.Controller;
import com.compsci408.rxcore.datatypes.Prescription;
import com.compsci408.rxcore.datatypes.Schedule;
import com.compsci408.rxcore.listeners.OnPrescriptionLoadedListener;
import com.compsci408.rxcore.listeners.OnScheduleLoadedListener;

import android.app.Activity;
import android.content.Intent;
import android.os.Bundle;
import android.view.Menu;
import android.view.MenuItem;
import android.view.View;
import android.view.View.OnClickListener;
import android.widget.AdapterView;
import android.widget.AdapterView.OnItemClickListener;
import android.widget.ArrayAdapter;
import android.widget.Button;
import android.widget.ListView;
import android.widget.TextView;

/**
 * {@link Activity} which displays a given
 * patient's information, including his/her
 * name and all scheduled medication alerts.
 * Also provides the opportunity to add a new
 * alert (or series of alerts).
 * @author Evan
 */
public class PatientActivity extends Activity {

	TextView patientName;
	ListView medList;
	Button addMed;
	
    ArrayAdapter<String> mAdapter;
    
    private Controller mController;
	
	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.activity_patient);
		
		mController = Controller.getInstance(this);
		mController.showProgress("Loading Patient Details", true);
		mController.getPrescription(new OnPrescriptionLoadedListener() {

			@Override
			public void onPrescriptionLoaded(List<Prescription> prescription) {
				Set<String> currentMeds = new HashSet<String>();
				for (int i = 0; i < prescription.size(); i++) {
					currentMeds.add(prescription.get(i).getMedication());
				}
				
				mAdapter = new ArrayAdapter<String>(
		                PatientActivity.this, 
		                android.R.layout.simple_list_item_1,
						new ArrayList<String>(currentMeds));
				medList.setAdapter(mAdapter);
				mController.showProgress(false);
			}
			
		});
		
		
		patientName = (TextView) findViewById(R.id.textview_patient_name);
		patientName.setText(mController.getPatientName());
		
		medList = (ListView) findViewById(R.id.listview_patient_meds);		
		addMed = (Button) findViewById(R.id.button_add_med);
		setListeners();
	}
	
	private void setListeners() {
		addMed.setOnClickListener(new OnClickListener() {

			@Override
			public void onClick(View v) {
				mController.setPatientName(patientName.getText().toString());
				
				Intent intent = new Intent(PatientActivity.this, NewPrescriptionActivity.class);
				startActivity(intent);
				overridePendingTransition(R.anim.fade_in, R.anim.fade_out);
			}
			
		});
		
		medList.setOnItemClickListener(new OnItemClickListener() {

			@Override
			public void onItemClick(AdapterView<?> parent, View view,
					int position, long id) {
				mController.setMedName((String) parent.getItemAtPosition(position));
				
				Intent intent = new Intent(PatientActivity.this, ProviderMedicationActivity.class);
				startActivity(intent);
				overridePendingTransition(R.anim.fade_in, R.anim.fade_out);
			}
	    	
	    });
	}

	@Override
	public boolean onCreateOptionsMenu(Menu menu) {
		// Inflate the menu; this adds items to the action bar if it is present.
		getMenuInflater().inflate(R.menu.patient, menu);
		return true;
	}

	@Override
	public boolean onOptionsItemSelected(MenuItem item) {
		// Handle action bar item clicks here. The action bar will
		// automatically handle clicks on the Home/Up button, so long
		// as you specify a parent activity in AndroidManifest.xml.
		int id = item.getItemId();
		if (id == R.id.action_logout) {
			mController.logOut();
			Intent i = new Intent(this, LoginActivity.class);
			i.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP | Intent.FLAG_ACTIVITY_NEW_TASK);
			startActivity(i);
			overridePendingTransition(R.anim.fade_in, R.anim.fade_out);
			finish();
			return true;
		}
		return super.onOptionsItemSelected(item);
	}
}
