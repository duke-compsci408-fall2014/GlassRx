package com.compsci408.androidrx.provider;

import java.util.ArrayList;
import java.util.List;

import com.compsci408.androidrx.R;
import com.compsci408.rxcore.Controller;
import android.annotation.SuppressLint;
import android.app.Activity;
import android.app.AlertDialog;
import android.app.Dialog;
import android.app.DialogFragment;
import android.content.DialogInterface;
import android.content.Intent;
import android.os.Bundle;
import android.view.LayoutInflater;
import android.view.View;
import android.view.View.OnClickListener;
import android.widget.Button;
import android.widget.CheckBox;
import android.widget.CompoundButton;
import android.widget.CompoundButton.OnCheckedChangeListener;
import android.widget.EditText;
import android.widget.TimePicker;

/**
 * {@link Activity} which allows a provider
 * to set a specific time at which to take a
 * a medication.  Also allows for repeating alarms
 * to be set.
 * @author Evan
 */
public class DayTimeActivity extends Activity {
	
	TimePicker mTimePicker;
	CheckBox mRepeatWeeks;
	EditText mWeekCount;
	Button mButtonDone;
	
	private String mDate;
	
	private Controller mController;
	
	List<Integer> mAlarms;
	
	@SuppressLint("InflateParams") @Override
	public void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.activity_patient);
		
		mController = Controller.getInstance(this);
		
		Intent intent = getIntent();
		
		mDate = intent.getStringExtra("date");
		mAlarms = new ArrayList<Integer>();
		
		mTimePicker = (TimePicker) findViewById(R.id.timepicker_alarm_time);
		mRepeatWeeks = (CheckBox) findViewById(R.id.checkbox_repeat_weekly);
		mWeekCount = (EditText) findViewById(R.id.edittext_week_count);
		mButtonDone = (Button) findViewById(R.id.button_add_day_time);
		
		mButtonDone.setOnClickListener(new OnClickListener() {

			@Override
			public void onClick(View v) {
				Intent intent = new Intent(DayTimeActivity.this, NewAlarmActivity.class);
				intent.putExtra("day_time", "");
				
			}
			
		});
		
		mRepeatWeeks.setOnCheckedChangeListener(new OnCheckedChangeListener() {

			@Override
			public void onCheckedChanged(CompoundButton buttonView,
					boolean isChecked) {
				if (isChecked) {
					mWeekCount.setVisibility(View.VISIBLE);
				} else {
					mWeekCount.setVisibility(View.INVISIBLE);
				}
			}
			
		});
	}

}
