package com.compsci408.androidrx.adapters;

import java.util.ArrayList;

import com.compsci408.rxcore.datatypes.Medication;

import android.content.Context;
import android.widget.ArrayAdapter;
import android.widget.Filterable;

public class MedSearchResultsAdapter extends ArrayAdapter<Medication> implements Filterable{

	private ArrayList<Medication> mData;
	
	public MedSearchResultsAdapter(Context context, int resource) {
		super(context, resource);
        mData = new ArrayList<Medication>();
	}
	
	@Override
    public int getCount() {
        return mData.size();
    }

    @Override
    public Medication getItem(int index) {
        return mData.get(index);
    }

    @Override
    public Filter getFilter() {
        Filter myFilter = new Filter() {
            @Override
            protected FilterResults performFiltering(CharSequence constraint) {
                FilterResults filterResults = new FilterResults();
                if(constraint != null) {
                    // A class that queries a web API, parses the data and returns an ArrayList<Style>
                    StyleFetcher fetcher = new StyleFetcher();
                    try {
                        mData = fetcher.retrieveResults(constraint.toString());
                    }
                    catch(Exception e) {
                        Log.e("myException", e.getMessage());
                    }
                    // Now assign the values and count to the FilterResults object
                    filterResults.values = mData;
                    filterResults.count = mData.size();
                }
                return filterResults;
            }

            @Override
            protected void publishResults(CharSequence contraint, FilterResults results) {
                if(results != null && results.count > 0) {
                notifyDataSetChanged();
                }
                else {
                    notifyDataSetInvalidated();
                }
            }
        };
        return myFilter;
    }

}
