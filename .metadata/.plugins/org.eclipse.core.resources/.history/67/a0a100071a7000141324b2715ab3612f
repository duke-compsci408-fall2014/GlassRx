package com.compsci408.androidrx.patient;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import com.compsci408.androidrx.LoginActivity;
import com.compsci408.androidrx.R;
import com.compsci408.androidrx.adapters.PrescriptionAdapter;
import com.compsci408.rxcore.Controller;
import com.compsci408.rxcore.datatypes.Prescription;
import com.compsci408.rxcore.datatypes.Schedule;
import com.compsci408.rxcore.listeners.OnPrescriptionLoadedListener;
import com.compsci408.rxcore.listeners.OnScheduleLoadedListener;

import android.app.Activity;
import android.content.Intent;
import android.os.Bundle;
import android.view.Menu;
import android.view.MenuItem;
import android.widget.ArrayAdapter;
import android.widget.ListView;

public class PatientProfileActivity extends Activity {

	ListView lvCurrentMeds;
	ListView lvNewPrescriptions;
	
	ArrayAdapter<String> mCurrentAdapter;
	ArrayAdapter<String> mNewAdapter;
	
	private Map<String, Prescription> mNewPrescriptions;
	
	private Controller mController;
	
	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.activity_patient_profile);
		
		lvCurrentMeds = (ListView) findViewById(R.id.listview_current_medications);
		lvNewPrescriptions = (ListView) findViewById(R.id.listview_new_prescriptions);
		
		mController = Controller.getInstance(this);
		mController.showProgress("Loading patient details", true);
		mController.getPatientSchedule(new OnScheduleLoadedListener() {

			@Override
			public void onScheduleLoaded(List<Schedule> schedule) {
				Set<String> currentMeds = new HashSet<String>();
				for (int i = 0; i < schedule.size(); i++) {
					currentMeds.add(schedule.get(i).getMedication());
				}
				
				mCurrentAdapter = new ArrayAdapter<String>(
		                PatientProfileActivity.this, 
		                android.R.layout.simple_list_item_1,
						new ArrayList<String>(currentMeds));
				lvCurrentMeds.setAdapter(mCurrentAdapter);
				mController.showProgress(false);
			}
			
		});
		
		mController.showProgress("Loading patient details", true);
		mController.getPendingPrescriptionsForPatient(new OnPrescriptionLoadedListener() {

			@Override
			public void onPrescriptionLoaded(List<Prescription> prescription) {
				mNewPrescriptions = new HashMap<String, Prescription>();
				for (int i = 0; i < prescription.size(); i++) {	
					Prescription p = prescription.get(i);
					int day = mController.getDayFromDate(p.getDay_to_take());
					String key = p.getMedication() + " " + 
								mController.getDayFromDate(p.getDay_to_take())
				}
				mNewAdapter = new PrescriptionAdapter(PatientProfileActivity.this, 
						R.layout.prescription_list_item, mNewPrescriptions, true);
				
				mNewAdapter.clear();
				mNewAdapter.addAll(mNewPrescriptions);
				mNewAdapter.notifyDataSetChanged();
				lvNewPrescriptions.setAdapter(mNewAdapter);
				mController.showProgress(false);
			}
			
		});
	}
	
	private void setListeners() {
		
	}

	@Override
	public boolean onCreateOptionsMenu(Menu menu) {
		// Inflate the menu; this adds items to the action bar if it is present.
		getMenuInflater().inflate(R.menu.patient_profile, menu);
		return true;
	}

	@Override
	public boolean onOptionsItemSelected(MenuItem item) {
		// Handle action bar item clicks here. The action bar will
		// automatically handle clicks on the Home/Up button, so long
		// as you specify a parent activity in AndroidManifest.xml.
		int id = item.getItemId();
		if (id == R.id.action_logout) {
			mController.logOut();
			Intent i = new Intent(this, LoginActivity.class);
			i.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP | Intent.FLAG_ACTIVITY_NEW_TASK);
			startActivity(i);
			overridePendingTransition(R.anim.fade_in, R.anim.fade_out);
			return true;
		}
		return super.onOptionsItemSelected(item);
	}
}
